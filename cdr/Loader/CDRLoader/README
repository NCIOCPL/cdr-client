[This is the README that was *not* automatically generated by Visual
Studio's wizards.]

Here's how this package works.

The Makefile does two things:

 * invokes devenv (the Visual Studio 7 program) to build CdrLoader.exe
 * packs up a self-extracting zipfile (CDRLoaderSetup.exe) containing:

   1. CDRLoader.exe
      - Program which copies the latest client files to the user's machine
        and then launches XMetaL.

   2. unzip.exe
      - Used by CDRLoader to unpack the client files it downloads.

   3. CDRLoader.ini
      - Initial version of the file containing settings for launching
        CDRLoader.exe.

   4. CDRLoader.cmd
      - Batch file for invoking CDRLoader.exe with the appropriate command-
        line arguments.
         
   5. CDR.lnk
      - Shortcut for launching CDRLoader.cmd.

   6. SetupCDRLoader.cmd
      - Copies the shortcut to the desktop and everything else to the XMetaL
        folder.

To install this package:

   1. Remove all previous version of CDRLoader, installer, etc.
   2. Copy CDRLoaderSetup.exe to the machine.
   3. Run CDRLoaderSetup.exe to extract the files.
   4. Change into the CDRLoaderSetup folder.
   5. Run SetupCDRLoader.cmd.
   6. Remove the setup files and folder (optional).

The user now has an shortcut on the desktop ("CDR") which can be used
to invoke the CDR front end.  Here's what happens when the user
double-clicks on this shortcut.

   1. The shortcut invokes CDRLoader.cmd in the XMetaL directory.

   2. CDRLoader.cmd runs "CDRLoader.exe -B 1".

      * the command-line option "-B 1" turns on debugging. [1]

   3. CDRLoader.exe does the following:

      * Brings up the logon dialog window
      * Reads the user's settings from the dialog window
      * Reads the manifest file
      * If the manifest file exists, ask the server if it's up to date
      * If not (or it didn't exist), get the current file set from server [2]
      * Save the user's choices from the dialog window
      * If CDRLoaderUpdate.cmd file exists, invoke it [3]
      * Otherwise, launch XMetaL

[1] Other command-line options available include:

    * -M name [sets manifest file to name; default: CDR_MANIFEST.XML]
    * -A name [set name of program to launch; default: XMetaL.exe]
    * -D name [sets manifest directory to name; default: current dir]
    * -U [causes CDRLoaderUpdate.cmd script to be removed]

[2] Here's what's involved in getting the current file set from the server:

    * Send the list ("manifest") of what we have to the server
    * Unpack the zipfile from the server (if there is one)
    * Clean out old RLX files generated from CDR DTDs
    * Remove any files the server says are no longer used

[3] This is done to recursively run a new version of CDRLoader, because
    the server sent us a new one.
